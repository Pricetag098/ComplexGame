// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel GenMap




// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture

float3 pos;
float dist;
float power;
uint scale;

RWTexture3D<half> Map;

int to1D(int x, int y, int z)
{
    return (z * scale * scale) + (y * scale) + x;
}

int3 to3D(int idx)
{
    int z = idx / (scale * scale);
    idx -= (z * scale * scale);
    int y = idx / scale;
    int x = idx % scale;
    return int3 (x, y, z);
}

[numthreads(8, 8, 8)]
void GenMap(uint3 id : SV_DispatchThreadID)
{
    if (id.x >= scale || id.y >= scale ||id.y >= scale)
    {
        return;
    }
    float3 coords = (float3)id;
    // TODO: insert actual code here!
    float val = Map[id.xyz];
    if (distance(coords, pos) < dist)
    {
        val += 1/ distance(coords, pos) * power;
    }

    Map[id.xyz] = val;
}


